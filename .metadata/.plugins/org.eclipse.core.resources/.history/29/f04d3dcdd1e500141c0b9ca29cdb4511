package garage.gui.tabs.manipulate_data_tab;

import java.awt.event.*;

import javax.swing.*;
import javax.swing.border.TitledBorder;

import garage.controller.Controller;
import garage.gui.tabs.BasicTabPanel;

@SuppressWarnings("serial")
public class ManipulationTab extends BasicTabPanel implements ActionListener {
    private final static String ONE_THIRD_EMPTY_SPACE = "             ";

    private final static String REG_USR_TITLE = "Registrera ny användare";
    private final static String REG_USR_USRNAME_TITLE = "Användarnamn";
    private final static String REG_USR_PASSWORD_TITLE = "Lösenord";
    private final static String REG_USR_BUTTON_TITLE = "";
    private final static String REG_USR_BUTTON_LABEL = "Registrera";

    private final static String UNREG_USR_TITLE = "Avregistrera befintlig användare";
    private final static String UNREG_USR_USRNAME_TITLE = "Användarnamn";
    private final static String UNREG_USR_EMPTY_SPACE = ONE_THIRD_EMPTY_SPACE;
    private final static String UNREG_USR_BUTTON_TITLE = "";
    private final static String UNREG_USR_BUTTON_LABEL = "Avregistrera";

    private final static String ADD_BIKE_TITLE = "Anslut ny cykel";
    private final static String ADD_BIKE_USRNAME_TITLE = "Användarnamn";
    private final static String ADD_BIKE_EMPTY_SPACE = ONE_THIRD_EMPTY_SPACE;
    private final static String ADD_BIKE_BUTTON_TITLE = "";
    private final static String ADD_BIKE_BUTTON_LABEL = "Anslut";

    private final static String REM_BIKE_TITLE = "Ta bort befintlig cykel";
    private final static String REM_BIKE_BIKEID_TITLE = "Cykel ID";
    private final static String REM_BIKE_EMPTY_SPACE = ONE_THIRD_EMPTY_SPACE;
    private final static String REM_BIKE_BUTTON_TITLE = "";
    private final static String REM_BIKE_BUTTON_LABEL = "Ta bort";

    private JTextField regUsrUsrnameTextField;
    private JTextField regUsrPasswordTextField;
    private JTextField unregUsrUsrnameTextField;
    private JTextField addBikeUsrnameTextField;
    private JTextField remBikeBikeIDTextField;

	public ManipulationTab(Controller controller) {
		super(controller);
		this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
		
		JPanel p;
        JButton b;
        TitledBorder t;
		
		JPanel registerUserPanel = new JPanel();
		registerUserPanel.setLayout(new BoxLayout(registerUserPanel, BoxLayout.X_AXIS));
		p = new JPanel();
		p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REG_USR_USRNAME_TITLE));
        regUsrUsrnameTextField = new JTextField();
        p.add(regUsrUsrnameTextField);
        registerUserPanel.add(p);
		p = new JPanel();
		p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REG_USR_PASSWORD_TITLE));
        regUsrPasswordTextField = new JTextField();
        p.add(regUsrPasswordTextField);
        registerUserPanel.add(p);
		p = new JPanel();
		p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REG_USR_BUTTON_TITLE));
        b = new JButton(REG_USR_BUTTON_LABEL);
        b.addActionListener(this);
        p.add(b);
        registerUserPanel.add(b);
        t = new TitledBorder(REG_USR_TITLE);
        registerUserPanel.setBorder(t);

		JPanel removeUserPanel = new JPanel();
		removeUserPanel.setLayout(new BoxLayout(removeUserPanel, BoxLayout.X_AXIS));
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(UNREG_USR_EMPTY_SPACE));
        removeUserPanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(UNREG_USR_USRNAME_TITLE));
        unregUsrUsrnameTextField = new JTextField();
        p.add(unregUsrUsrnameTextField);
        removeUserPanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(UNREG_USR_BUTTON_TITLE));
        b = new JButton(UNREG_USR_BUTTON_LABEL);
        b.addActionListener(this);
        p.add(b);
        removeUserPanel.add(p);
        t = new TitledBorder(UNREG_USR_TITLE);
        removeUserPanel.setBorder(t);
		
		JPanel connectBikePanel = new JPanel();
		connectBikePanel.setLayout(new BoxLayout(connectBikePanel, BoxLayout.X_AXIS));
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(ADD_BIKE_EMPTY_SPACE));
        connectBikePanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(ADD_BIKE_USRNAME_TITLE));
        addBikeUsrnameTextField = new JTextField();
        p.add(addBikeUsrnameTextField);
        connectBikePanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(ADD_BIKE_BUTTON_TITLE));
        b = new JButton(ADD_BIKE_BUTTON_LABEL);
        p.add(b);
        connectBikePanel.add(p);
        t = new TitledBorder(ADD_BIKE_TITLE);
        connectBikePanel.setBorder(t);

		JPanel removeBikePanel = new JPanel();
		removeBikePanel.setLayout(new BoxLayout(removeBikePanel, BoxLayout.X_AXIS));
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REM_BIKE_EMPTY_SPACE));
        removeBikePanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REM_BIKE_BIKEID_TITLE));
        remBikeBikeIDTextField = new JTextField();
        p.add(remBikeBikeIDTextField);
        removeBikePanel.add(p);
        p = new JPanel();
        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
        p.add(new JLabel(REM_BIKE_BUTTON_TITLE));
        b = new JButton(REM_BIKE_BUTTON_LABEL);
        p.add(b);
        removeBikePanel.add(p);
        t = new TitledBorder(REM_BIKE_TITLE);
        removeBikePanel.setBorder(t);

        this.add(registerUserPanel);
        this.add(removeUserPanel);
        this.add(connectBikePanel);
        this.add(removeBikePanel);
	}

    @Override
    public void notifyTabChange() {
        regUsrUsrnameTextField.setText("");
        regUsrPasswordTextField.setText("");
        addBikeUsrnameTextField.setText("");
        remBikeBikeIDTextField.setText("");
    }

	@Override
	public void actionPerformed(ActionEvent e) {
		String buttonLabel = e.getActionCommand();
		if (buttonLabel.equals(REG_USR_BUTTON_LABEL)) {
			
		} else if (buttonLabel.equals(UNREG_USR_BUTTON_LABEL)) {
			
		} else if (buttonLabel.equals(ADD_BIKE_BUTTON_LABEL)) {
			
		} else if (buttonLabel.equals(REM_BIKE_BUTTON_LABEL)) {
			
		}
	}
}
