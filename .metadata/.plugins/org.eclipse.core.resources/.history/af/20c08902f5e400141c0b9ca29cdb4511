package garage.database;

/**
 * Handles communication with the database
 */
public class Database {

    /**
     * Check if a bike is connected to this garage.
     * @param bikeID Bike to check.
     * @return True if bike is connected to this garage,
     * otherwise false.
     */
    public boolean bikeConnected(String bikeID) {
        return false;
    }

    /**
     * Connect a new bike to this garage and recieve its new ID value.
     * @param username The username associated with the bike.
     * @return null if unsuccesful, otherwise the bikes new ID value.
     */
    public String connectNewBike(String username) {
        return "";
    }

    /**
     * 'Disconnect' a bike from this garage.
     * @param bikeID The bikes ID.
     * @return True if successful, otherwise false.
     */
    public boolean removeBike(String bikeID) {
        return false;
    }

    /**
     * Get the password associated with a username.
     * @param username Username whose password is requested.
     * @return null if user does not exist, otherwise the user's
     * password is returned.
     */
    public String getPassword(String username) {
        return null;
    }

    /**
     * Method checks if a user with a specific username exists
     * in the database.
     * @param username Username of user who we want to check.
     * @return Returns true if user does exist, otherwise false.
     */
    public boolean userExists(String username) {
        return false;
    }

    /**
     * Get owner of a bike.
     * @param bikeID The bikes ID.
     * @return Returns null if bike is not connected to this garage,
     * otherwise the username associated with that bike.
     */
    public String getBikeOwner(String bikeID) {
        return null;
    }

    /**
     * Check if a user is inside the garage.
     * @param username Username for the user we want to check.
     * @return Returns true if user is inside the garage, otherwise false.
     */
    public boolean userIsInsideGarage(String username) {
        return false;
    }
}
